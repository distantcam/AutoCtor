name: 🛠️ build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-**"
  pull_request:
    types: [opened, reopened, edited, syncrhonize]

jobs:
  test:
    name: 🧪 Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        roslyn: ["3.11", "4.0", "4.4"]
    steps:
      - name: 🛒 Check-out code
        uses: actions/checkout@v4

      - name: 📐 Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: src/global.json

      - name: 🔍 Enable problem matchers
        run: echo "::add-matcher::.github/matchers/dotnet.json"

      - name: 🛠️ Build code
        run: dotnet build --configuration Release

      - name: 🧪 Testing ${{ matrix.roslyn }} code
        run: >
          dotnet test
          --configuration Release
          -p:GeneratorVersion=${{ matrix.roslyn }}
          --logger GitHubActions
          --
          RunConfiguration.CollectSourceInformation=true

      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: verify-test-results
          path: |
            **/*.received.*

  build:
    name: 🛠️ Build
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 🛒 Check-out code
        uses: actions/checkout@v4

      - name: 📐 Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: src/global.json

      - name: 🔍 Enable problem matchers
        run: echo "::add-matcher::.github/matchers/dotnet.json"

      - name: 🔧 Load packages
        run: dotnet restore

      - name: 🛠️ Build code
        run: dotnet build --configuration Release -p:Version=${{ github.ref_name }} -p:GitSha=${{ github.sha }} --no-restore

      - name: 📝 Generate Release Notes
        run: gh release create ${{ github.ref_name }} --draft --generate-notes nugets/*.nupkg
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
